# Generated by Django 4.0.3 on 2022-05-06 00:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('career', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.career')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.department')),
            ],
        ),
        migrations.CreateModel(
            name='ScientificDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StudyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('since', models.DateField()),
                ('until', models.DateField(blank=True, null=True)),
                ('number_of_semesters', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('number_of_hours', models.PositiveIntegerField()),
                ('semester', models.PositiveSmallIntegerField()),
                ('career', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.career')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.department')),
                ('study_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.studyplan')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_hours', models.PositiveIntegerField()),
                ('number_of_groups', models.PositiveIntegerField()),
                ('class_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.classtype')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachingAssignmentAPI.subject')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TimePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TeachingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('study_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaching_groups', to='teachingAssignmentAPI.studyplan')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.IntegerField(default=1)),
                ('group', models.IntegerField()),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachingAssignmentAPI.professor')),
                ('subject_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachingAssignmentAPI.subjectdescription')),
            ],
        ),
        migrations.AddField(
            model_name='subjectdescription',
            name='time_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.timeperiod'),
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, default='', max_length=100)),
                ('code', models.TextField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='professor',
            name='scientific_degree',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.scientificdegree'),
        ),
        migrations.AddField(
            model_name='professor',
            name='teaching_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachingAssignmentAPI.teachingcategory'),
        ),
        migrations.CreateModel(
            name='CarmenTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachingAssignmentAPI.semester')),
                ('teaching_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachingAssignmentAPI.teachinggroup')),
                ('time_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachingAssignmentAPI.timeperiod')),
            ],
        ),
    ]
